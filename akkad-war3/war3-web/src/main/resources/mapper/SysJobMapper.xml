<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xyz.wongs.weathertop.war3.system.mapper.SysJobMapper" >
  <resultMap id="BaseResultMap" type="xyz.wongs.weathertop.war3.system.entity.SysJob" >
    <id column="job_id" property="id" jdbcType="BIGINT" />
    <id column="job_name" property="jobName" jdbcType="VARCHAR" />
    <id column="job_group" property="jobGroup" jdbcType="VARCHAR" />
    <result column="invoke_target" property="invokeTarget" jdbcType="VARCHAR" />
    <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR" />
    <result column="misfire_policy" property="misfirePolicy" jdbcType="VARCHAR" />
    <result column="concurrent" property="concurrent" jdbcType="CHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    job_id, job_name, job_group, invoke_target, cron_expression, misfire_policy, concurrent, 
    status, create_by, create_time, update_by, update_time, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from sys_job
    where job_id = #{id,jdbcType=BIGINT}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from sys_job
    where job_id = #{id,jdbcType=BIGINT}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="xyz.wongs.weathertop.war3.system.entity.SysJob" >
    insert into sys_job (job_id, job_name, job_group, 
      invoke_target, cron_expression, misfire_policy, 
      concurrent, status, create_by, 
      create_time, update_by, update_time, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, 
      #{invokeTarget,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR}, #{misfirePolicy,jdbcType=VARCHAR}, 
      #{concurrent,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xyz.wongs.weathertop.war3.system.entity.SysJob" >
    insert into sys_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobGroup != null" >
        job_group,
      </if>
      <if test="invokeTarget != null" >
        invoke_target,
      </if>
      <if test="cronExpression != null" >
        cron_expression,
      </if>
      <if test="misfirePolicy != null" >
        misfire_policy,
      </if>
      <if test="concurrent != null" >
        concurrent,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="invokeTarget != null" >
        #{invokeTarget,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="misfirePolicy != null" >
        #{misfirePolicy,jdbcType=VARCHAR},
      </if>
      <if test="concurrent != null" >
        #{concurrent,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xyz.wongs.weathertop.war3.system.entity.SysJob" >
    update sys_job
    <set >
      <if test="invokeTarget != null" >
        invoke_target = #{invokeTarget,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="misfirePolicy != null" >
        misfire_policy = #{misfirePolicy,jdbcType=VARCHAR},
      </if>
      <if test="concurrent != null" >
        concurrent = #{concurrent,jdbcType=CHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where job_id = #{id,jdbcType=BIGINT}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="xyz.wongs.weathertop.war3.system.entity.SysJob" >
    update sys_job
    set invoke_target = #{invokeTarget,jdbcType=VARCHAR},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      misfire_policy = #{misfirePolicy,jdbcType=VARCHAR},
      concurrent = #{concurrent,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where job_id = #{id,jdbcType=BIGINT}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </update>
</mapper>